@page "/"
@page "/dashboard"
@using HotelWiz.Back.Common.Dto.Dashboard;
@using HotelWiz.Back.Services;
@using HotelWiz.Shared.Components
@using HotelWiz.Back.Common.Dto.Dashboard;
@inject DashboardService _dashboardService
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject MessagesService _messagesService


<PageTitle>Dashboard</PageTitle>


<AuthorizeView>
@*     <Authorized>
        Authorized
        @userName
    </Authorized> *@
    <NotAuthorized>
        <a href="/auth/account/login?redirectTo=dashboard">Login</a>
    </NotAuthorized>
</AuthorizeView>


@if (dashboardResume == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="grid grid-cols-4 bg-white rounded-lg ">
        <div>
            <DashboardCard Iconify="mdi:guest-room-outline" Value="@dashboardResume.Rooms.TotalRooms" Class="oi oi-arrow-bottom" Title="Total Habitaciones"/>
        </div>
        <div>
            <DashboardCard Icon="bi bi-bookmarks-fill" Value="@dashboardResume.Reservations.Total" Class="oi oi-arrow-bottom" Title="Reservas"/>
        </div>
        <div>
            <DashboardCard Icon="bi bi-person-fill" Value="@dashboardResume.Empleados.Total" Class="oi oi-arrow-bottom" Title="Staff"/>
        </div>
        <div>
            <DashboardCard Icon="bi bi-question-circle" Value="@dashboardResume.Issues.Total" Class="oi oi-arrow-bottom" Title="Incidentes/Quejas" />
        </div>


        <div>
            <DashboardCard Icon="bi bi-check-circle text-green-500" Value="@dashboardResume.Rooms.TotalFree" Class="oi oi-arrow-bottom" Title="Habitaciones Disponibles"/>
        </div>
        <div>
            <DashboardCard Icon="bi bi-x-octagon text-red-500" Value="@dashboardResume.Rooms.TotalTaken" Class="oi oi-arrow-bottom" Title="Habitaciones Ocupadas"/>
        </div>
        <div>
            <DashboardCard Icon="bi bi-check-square" Value="@dashboardResume.Reservations.CheckIn" Class="oi oi-arrow-bottom" Title="Checkin Pendientes"/>
        </div>
        <div>
            <DashboardCard Icon="bi bi-chat-left-text-fill" Value="@UnreadedMessages" Class="oi oi-arrow-bottom" Title="Mensajes Nuevos" />
        </div>


    </div>
}

@code {
    private TempDashBoardResponse? dashboardResume = new();
    private string? userName;

    private int UnreadedMessages;

    protected override async Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User;
        userName = user.Identity.Name;
        dashboardResume = await _dashboardService.GetDashboardBoardResponse();
        UnreadedMessages = _messagesService.GenerateMessage().Count(x => !x.IsReaded);

        //test
        //_emailService.GetMessagesTitles();
    }

}